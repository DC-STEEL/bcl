//SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.5.0 < 0.9.0;

// contract Array {
//     bool public value = true;

//     function check(uint a) public returns(bool){
//         if(a>100){
//             value = true;
//             return value;
//         }
//         else{
//             value = false;
//             return value;
//         }
//     }
// }

struct Student{
    uint roll;
    string name;
}

// contract Demo{
//     Student public s1;

//     constructor(uint _roll, string memory _name){
//         s1.roll = _roll;
//         s1.name = _name;
//     }

//     function change(uint _roll, string memory _name) public{
//         Student memory new_student = Student({
//             roll: _roll,
//             name: _name
//         });
        
//         s1 = new_student;
//     }
// }

// contract State{
//     enum user{allowed, not_allowed, wait}
//     user public u1 = user.allowed;
//     uint public lottery = 1000;
//     function owner() public{
//         if(u1 == user.allowed){
//             lottery = 0;
//         }
//     }

//     function changeOwner() public{
//         u1 = user.not_allowed;
//     }
// }

// contract demo{
//     function getter() public view returns(uint block_no, uint timestamp, address msgsender){
//         return (block.number,block.timestamp,msg.sender);
//     }
// }

contract pay{
    function payEther() public payable{

    }

    function getBalance() public view returns(uint){
        return address(this).balance;
    }
}
